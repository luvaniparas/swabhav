1. class access
    {
       static int x;
       void increment()
       {
           x++;
       }   
     }   
    class static_use 
    {
        public static void main(String args[])
        {
            access obj1 = new access();
            access obj2 = new access();
            obj1.x = 0;   
            obj1.increment();
            obj2.increment();
            System.out.println(obj1.x + " " + obj2.x);
         }
   }
a) 1 2
b) 1 1
c) 2 2
d) Compilation Error

->c) 2 2

2.class static_out 
    {
        static int x;
 	static int y;
        void add(int a , int b)
        {
            x = a + b;
            y = x + b;
        }
    }    
    class static_use 
    {
        public static void main(String args[])
        {
            static_out obj1 = new static_out();
            static_out obj2 = new static_out();   
            int a = 2;
            obj1.add(a, a + 1);
            obj2.add(5, a);
            System.out.println(obj1.x + " " + obj2.y);     
        }
   }
a) 7 7
b) 6 6
c) 7 9
d) 9 7

-> 7 9

3. class Output 
    {
        public static void main(String args[])
        {
            int arr[] = {1, 2, 3, 4, 5};
            for ( int i = 0; i < arr.length - 2; ++i)
                System.out.println(arr[i] + " ");
        } 
    }
a) 1 2
b) 1 2 3
c) 1 2 3 4
d) 1 2 3 4 5

-> a)1 2 /2 3

4.  class access
    {
        public int x;
 	private int y;
        void cal(int a, int b)
        {
            x =  a + 1;
            y =  b;
        }        
    }    
    public class access_specifier 
    {
        public static void main(String args[])
        {
            access obj = new access();   
            obj.cal(2, 3);
            System.out.println(obj.x + " " + obj.y);     
        }
   }
a) 3 3
b) 2 3
c) Runtime Error
d) Compilation Error

-> c) Compiletime Error

5.class access
    {
        public int x;
 	private int y;
        void cal(int a, int b)
        {
            x =  a + 1;
            y =  b;
        }   
        void print() 
        {
            System.out.println(" " + y);     
        } 
    }   
    public class access_specifier 
    {
        public static void main(String args[])
        {
            access obj = new access();   
            obj.cal(2, 3);
            System.out.println(obj.x);
            obj.print();     
        }
   }
a) 2 3
b) 3 3
c) Runtime Error
d) Compilation Error

->b) 3 3

6.class Test 
{ 
    int a = 1; 
    int b = 2; 
  
    Test func(Test obj) 
    { 
        Test obj3 = new Test(); 
        obj3 = obj; 
        obj3.a = obj.a++ + ++obj.b; 
        obj.b = obj.b; 
        return obj3; 
    } 
  
    public static void main(String[] args) 
    { 
        Test obj1 = new Test(); 
        Test obj2 = obj1.func(obj1); 
  
        System.out.println("obj1.a = " + obj1.a + "  obj1.b = " + obj1.b); 
        System.out.println("obj2.a = " + obj2.a + "  obj1.b = " + obj2.b); 
  
    } 
} 

->obj1.a=3 obj1.b=2
-> obj1.a=3 obj1.b=2

7.class Test { 
  int i; 
}  
class Main { 
  public static void main(String args[]) {  
      Test t = new Test();  
      System.out.println(t.i); 
   }  
} 
(A) garbage value
(B) 0
(C) compiler error
(D) runtime error

->(B) 0

8.class Test 
{ 
    int a = 1; 
    int b = 2; 
  
    Test func(Test obj) 
    { 
        Test obj3 = new Test(); 
        obj3 = obj; 
        obj3.a = obj.a++ + ++obj.b; 
        obj.b = obj.b; 
        return obj3; 
    } 
  
    public static void main(String[] args) 
    { 
        Test obj1 = new Test(); 
        Test obj2 = obj1.func(obj1); 
  
        System.out.println("obj1.a = " + obj1.a + "  obj1.b = " + obj1.b); 
        System.out.println("obj2.a = " + obj2.a + "  obj1.b = " + obj2.b); 
  
    } 
} 

->obj1.a=3 obj1.b=2
-> obj1.a=3 obj1.b=2


9.class Test { 
    public static void main(String args[])  { 
       System.out.println(10  +  20 + "GeeksQuiz");  
       System.out.println("GeeksQuiz" + 10 + 20);  
   }   
} 

-> 30 GeeksQuiz 
-> GeeksQuiz 10 20

10.class Logical { 
    public static void main(String[] args) 
    { 
        // initializing variables 
        int a = 10, b = 20, c = 20, d = 0; 
  
        // Displaying a, b, c 
        System.out.println("Var1 = " + a); 
        System.out.println("Var2 = " + b); 
        System.out.println("Var3 = " + c); 
  
        // using logical AND to verify 
        // two constraints 
        if ((a < b) && (b == c)) { 
            d = a + b + c; 
            System.out.println("The sum is: " + d); 
        } 
        else
            System.out.println("False conditions"); 
    } 
} 

->10
    20
    20
The sum is 50	

11.class Test1 { 
public
    static void main(String[] args) 
    { 
        int x = 20; 
        System.out.println(x); 
    } 
    static
    { 
        int x = 10; 
        System.out.print(x + " "); 
    } 
} 

->10 
    20

12.class Test1 { 
    int x = 10; 
public
    static void main(String[] args) 
    { 
        System.out.println(x); 
    } 
    static
    { 
        System.out.print(x + " "); 
    } 
}
 
->  10

13.class Test1 { 
    int x = 10; 
public
    static void main(String[] args) 
    { 
        Test1 t1 = new Test1(); 
        System.out.println(t1.x); 
    } 
    static
    { 
        int x = 20; 
        System.out.print(x + " "); 
    } 
} 

->20 10

14.class Test1 { 
    int x = 10; 
public
    static void main(String[] args) 
    { 
        System.out.println(Test1.x); 
    } 
    static
    { 
        int x = 20; 
        System.out.print(x + " "); 
    } 
} 

->compiler error

15.class Test1 { 
    static int x = 10; 
public
    static void main(String[] args) 
    { 
        Test1 t1 = new Test1(); 
        Test1 t2 = new Test1(); 
  
        t1.x = 20; 
        System.out.print(t1.x + " "); 
        System.out.println(t2.x); 
    } 
}

-> 20 20 